{"version":3,"sources":["src/loader.utils.mjs","src/loader.resource.mjs","src/loader.loaders.mjs","src/loader.load.mjs","src/loader.worker.mjs","src/loader.fetch.mjs","src/loader.mjs"],"names":["global","factory","exports","module","define","amd","self","Loader","this","prop","o","p","split","reduce","xs","x","getURL","arg","a","document","createElement","href","URL","isSupportedElement","el","HTMLImageElement","HTMLPictureElement","HTMLSourceElement","HTMLVideoElement","HTMLAudioElement","isCORS","hostname","window","location","protocol","collection","build","data","url","blob","LoaderResource","[object Object]","override","Loaders","image","bool","Image","Promise","resolve","reject","onload","onerror","src","loadImage","media","loadMedia","script","async","head","append","loadScript","width","height","body","loadObject","style","sheet","CSSStyleSheet","promise","replace","adoptedStyleSheets","loadStyle","_load","resource","type","ext","length","getLoaderType","Error","createObjectURL","finally","revokeObjectURL","then","catch","work","onmessage","event","message","response","fetch","options","status","statusText","e","postMessage","worker","loaderWorker","Blob","toString","Worker","createWorker","collection$1","_fetch","cors","addEventListener","NodeList","Array","isArray","map","isLoaderResource","load","console","warn"],"mappings":"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","sourcesContent":["/**\n *\n * @param {Object} o\n * @param {String} p\n */\nexport const prop = (o, p) =>\n    p.split(\".\").reduce((xs, x) => (xs && xs[x] ? xs[x] : null), o);\n\n/**\n *\n * @param {String|LoaderResource} url\n * @returns {URL}\n */\nexport const getURL = arg => {\n    arg = prop(arg, \"url\") || arg;\n    arg = prop(arg, \"href\") || arg;\n\n    const a = document.createElement(\"a\");\n    a.href = arg;\n\n    return new URL(a);\n};\n\n/**\n *\n * @param {HTMLElement} el\n * @returns {Boolean}\n */\nexport const isSupportedElement = el => {\n    return (\n        el instanceof HTMLImageElement ||\n        el instanceof HTMLPictureElement ||\n        el instanceof HTMLSourceElement ||\n        el instanceof HTMLVideoElement ||\n        el instanceof HTMLAudioElement\n    );\n};\n\n/**\n *\n * @param {Function} work\n * @returns {Worker}\n */\nexport const createWorker = work => {\n    work = typeof work !== \"function\" ? () => {} : work;\n\n    const url = URL.createObjectURL(\n        new Blob([\"(\", work.toString(), \")()\"], {\n            type: \"application/javascript\"\n        })\n    );\n\n    const worker = new Worker(url);\n\n    URL.revokeObjectURL(url);\n\n    return worker;\n};\n\n/**\n * TODO: do it\n * @param {String|LoaderResource} arg\n */\nexport const getLoaderType = arg => {\n    arg = getURL(arg).href;\n\n    let ext = arg.split(\".\");\n    ext = ext[ext.length - 1];\n\n    switch (ext) {\n        case \"jpg\":\n            return \"image\";\n        case \"css\":\n            return \"style\";\n        case \"js\":\n            return \"script\";\n        default:\n            return \"noop\";\n    }\n};\n\n/**\n *\n * @param {URL|String|LoaderResource} arg\n * @returns {Boolean}\n */\nexport const isCORS = arg => {\n    arg = getURL(arg);\n\n    return (\n        arg.hostname !== window.location.hostname ||\n        arg.protocol !== window.location.protocol\n    );\n};\n","import { getURL, prop, isSupportedElement } from \"./loader.utils.mjs\";\n\n// ...\nconst collection = {};\n\n// ...\nconst build = data => {\n    let o = {};\n\n    if (isSupportedElement(data)) {\n        o.el = data;\n        o.url = getURL(prop(o.el, \"dataset.src\")); // TODO: find a way to get currentSrc without triggering load\n    } else {\n        o.el = prop(data, \"el\");\n        o.url = data instanceof URL ? data : prop(data, \"url\");\n    }\n\n    o.blob = prop(data, \"blob\");\n\n    return o;\n};\n\n// ...\n// TODO: refactor to avoid \"override\" param\nexport default class LoaderResource {\n    constructor(data, override) {\n        let o = build(data);\n\n        if (o.url.href in collection && !override) {\n            o = collection[o.url.href];\n        }\n\n        this.el = o.el;\n        this.url = o.url;\n        this.blob = o.blob;\n\n        collection[this.url.href] = this;\n    }\n\n    static isLoaderResource(data) {\n        return data instanceof this;\n    }\n}\n","export const loadImage = (url, el = new Image()) =>\n    new Promise((resolve, reject) => {\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.src = url;\n    });\n\nexport const loadMedia = (url, el = new Image()) =>\n    // TODO:\n    new Promise((resolve, reject) => {\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.src = url;\n    });\n\nexport const loadStyle = (url, el = document.createElement(\"div\")) => {\n    const sheet = new CSSStyleSheet();\n\n    const promise = sheet.replace(`@import url(\"${url}\")`);\n\n    if (\"adoptedStyleSheets\" in el) {\n        el.adoptedStyleSheets = [...el.adoptedStyleSheets, sheet];\n    }\n\n    return promise;\n};\n\nexport const loadObject = (url, el = document.createElement(\"object\")) =>\n    new Promise((resolve, reject) => {\n        // TODO: check\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.data = url;\n\n        el.width = 0;\n        el.height = 0;\n\n        document.body.append(el);\n    });\n\nexport const loadScript = (url, el = document.createElement(\"script\")) =>\n    new Promise((resolve, reject) => {\n        // TODO: check\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.src = url;\n        el.async = true;\n\n        document.head.append(el);\n    });\n\nexport default {\n    image: (url, bool, el) => loadImage(url, bool ? el : void 0),\n    media: (url, bool, el) => loadMedia(url, bool ? el : void 0),\n    script: (url, bool) => (bool ? loadScript(url) : loadObject(url)),\n    style: (url, bool) => loadStyle(url, bool ? document : void 0)\n};\n","import Loaders from \"./loader.loaders.mjs\";\nimport { getLoaderType } from \"./loader.utils.mjs\";\n\n/**\n *\n * @param {LoaderResource} resource\n */\nexport default (resource, bool) => {\n    const type = getLoaderType(resource);\n\n    if (!(type in Loaders)) {\n        return Promise.reject(new Error(\"invalid type\"));\n    }\n\n    const url = !!resource.blob\n        ? URL.createObjectURL(resource.blob)\n        : resource.url.href;\n\n    return new Promise((resolve, reject) =>\n        Loaders[type](url, bool, resource.el)\n            .finally(() => URL.revokeObjectURL(url))\n            .then(() => resolve(resource))\n            .catch(reject)\n    );\n};\n","import { createWorker } from \"./loader.utils.mjs\";\n\nexport const work = () => {\n    onmessage = async event => {\n        const data = event.data;\n\n        let message;\n        try {\n            const response = await fetch(data.href, data.options);\n            const blob = await response.blob();\n\n            message = {\n                status: response.status,\n                statusText: response.statusText,\n                blob: blob\n            };\n        } catch (e) {\n            message = {\n                status: 0,\n                statusText: e\n            };\n        }\n\n        message.href = data.href;\n        postMessage(message);\n    };\n};\n\nlet worker = null;\n\nexport default () => {\n    if (worker) {\n        return worker;\n    }\n\n    return (worker = createWorker(work));\n};\n","import { isCORS } from \"./loader.utils.mjs\";\nimport _load from \"./loader.load.mjs\";\nimport loaderWorker from \"./loader.worker.mjs\";\nimport LoaderResource from \"./loader.resource.mjs\";\n\n// ...\nexport const collection = {};\n\n/**\n *\n * @param {LoaderResource} resource\n * @param {Object} options\n */\nexport default (resource, options = {}) => {\n    // ...\n    if (resource.url.href in collection) {\n        return collection[resource.url.href];\n    }\n\n    // ...\n    if (isCORS(resource) && options.cors !== \"no-cors\") {\n        return (collection[resource.url.href] = _load(resource, false));\n    }\n\n    // ...\n    return (collection[resource.url.href] = new Promise((resolve, reject) => {\n        const worker = loaderWorker();\n\n        // ...\n        worker.postMessage({\n            href: resource.url.href,\n            options: options\n        });\n\n        // ...\n        worker.addEventListener(\"message\", event => {\n            const data = event.data;\n\n            // ...\n            if (data.href !== resource.url.href) {\n                return;\n            }\n\n            // ...\n            if (data.status === 200) {\n                resolve(\n                    new LoaderResource(\n                        {\n                            ...resource,\n                            ...{\n                                blob: data.blob\n                            }\n                        },\n                        true\n                    )\n                );\n\n                return;\n            }\n\n            // ...\n            reject(new Error(`${data.statusText} ${data.href}`));\n        });\n    }));\n};\n","import { isCORS, getURL, isSupportedElement } from \"./loader.utils.mjs\";\nimport LoaderResource from \"./loader.resource.mjs\";\nimport _load from \"./loader.load.mjs\";\nimport _fetch from \"./loader.fetch.mjs\";\n\nexport default class Loader {\n    constructor(options) {\n        this.options = { ...{ fetch: {} }, ...options };\n    }\n\n    /**\n     *\n     * @param {String|Array|LoaderResource|HTMLElement|NodeList} arg\n     * @returns {Array|Promise}\n     */\n    fetch(arg) {\n        // ...\n        if (arg instanceof NodeList) {\n            return this.fetch([...arg]);\n        }\n\n        // ...\n        if (Array.isArray(arg)) {\n            return arg.map(a => this.fetch(a));\n        }\n\n        // ...\n        if (typeof arg === \"string\") {\n            return this.fetch(getURL(arg));\n        }\n\n        // ...\n        if (isSupportedElement(arg) || arg instanceof URL) {\n            return this.fetch(new LoaderResource(arg));\n        }\n\n        // ...\n        if (LoaderResource.isLoaderResource(arg)) {\n            return _fetch(arg, this.options.fetch);\n        }\n\n        // ...\n        return Promise.reject(new Error(\"invalid argument\"));\n    }\n\n    /**\n     * @param {String|Array|LoaderResource|HTMLElement|NodeList|URL} arg\n     * @returns {Array|Promise}\n     */\n    async load(arg) {\n        if (arg instanceof NodeList) {\n            return this.load([...arg]);\n        }\n\n        // ...\n        if (Array.isArray(arg)) {\n            return arg.map(a => this.load(a));\n        }\n\n        // ...\n        if (typeof arg === \"string\") {\n            return this.load(getURL(arg));\n        }\n\n        // ...\n        if (isSupportedElement(arg) || arg instanceof URL) {\n            return this.load(new LoaderResource(arg));\n        }\n\n        // ...\n        if (!isCORS(arg) || this.options.fetch.cors === \"no-cors\") {\n            try {\n                arg = await this.fetch(arg);\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n\n        // ...\n        if (LoaderResource.isLoaderResource(arg)) {\n            return _load(arg, true);\n        }\n\n        // ...\n        return Promise.reject(new Error(\"invalid argument\"));\n    }\n}\n"],"file":"loader.min.js"}