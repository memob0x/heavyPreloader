{"version":3,"sources":["src/loader.utils.mjs","src/loader.resource.mjs","src/loader.loaders.mjs","src/loader.worker.mjs","src/loader.fetch.mjs","src/loader.load.mjs","src/loader.mjs"],"names":["global","factory","exports","module","define","amd","self","Loader","this","prop","o","p","split","reduce","xs","x","getURL","arg","a","document","createElement","href","URL","isSupportedElement","el","HTMLImageElement","HTMLPictureElement","HTMLSourceElement","HTMLVideoElement","HTMLAudioElement","collection","WeakMap","build","data","url","blob","LoaderResource","[object Object]","override","has","get","set","Loaders","image","Image","Promise","resolve","reject","onload","onerror","src","loadImage","script","async","head","append","loadScript","style","sheet","CSSStyleSheet","promise","replace","adoptedStyleSheets","loadStyle","work","onmessage","event","message","response","fetch","options","status","statusText","e","postMessage","worker","loaderWorker","createObjectURL","Blob","toString","type","Worker","revokeObjectURL","createWorker","collection$1","_fetch","resource","addEventListener","Error","_load","pop","trim","getLoaderType","finally","cors","NodeList","Array","isArray","map","isLoaderResource","load"],"mappings":"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","sourcesContent":["/**\n *\n * @param {Object} o\n * @param {String} p\n */\nexport const prop = (o, p) =>\n    p.split(\".\").reduce((xs, x) => (xs && xs[x] ? xs[x] : null), o);\n\n/**\n *\n * @param {String|LoaderResource} url\n * @returns {URL}\n */\nexport const getURL = arg => {\n    arg = prop(arg, \"url\") || arg;\n    arg = prop(arg, \"href\") || arg;\n\n    const a = document.createElement(\"a\");\n    a.href = arg;\n\n    return new URL(a);\n};\n\n/**\n *\n * @param {HTMLElement} el\n * @returns {Boolean}\n */\nexport const isSupportedElement = el => {\n    return (\n        el instanceof HTMLImageElement ||\n        el instanceof HTMLPictureElement ||\n        el instanceof HTMLSourceElement ||\n        el instanceof HTMLVideoElement ||\n        el instanceof HTMLAudioElement\n    );\n};\n\n/**\n *\n * @param {Function} work\n * @returns {Worker}\n */\nexport const createWorker = work => {\n    work = typeof work !== \"function\" ? () => {} : work;\n\n    const url = URL.createObjectURL(\n        new Blob([\"(\", work.toString(), \")()\"], {\n            type: \"application/javascript\"\n        })\n    );\n\n    const worker = new Worker(url);\n\n    URL.revokeObjectURL(url);\n\n    return worker;\n};\n\n/**\n *\n * @param {String|LoaderResource} arg\n */\nexport const getLoaderType = arg => {\n    arg = getURL(arg)\n        .href.split(/\\#|\\?/)[0]\n        .split(\".\")\n        .pop()\n        .trim();\n\n    switch (arg) {\n        case \"jpg\":\n        case \"jpe\":\n        case \"jpeg\":\n        case \"jif\":\n        case \"jfi\":\n        case \"jfif\":\n        case \"gif\":\n        case \"tif\":\n        case \"tiff\":\n        case \"bmp\":\n        case \"dib\":\n        case \"webp\":\n        case \"ico\":\n        case \"cur\":\n        case \"svg\":\n        case \"png\":\n            return \"image\";\n        case \"css\":\n            return \"style\";\n        case \"js\":\n        case \"mjs\":\n            return \"script\";\n        /*case \"mp3\":\n        case \"ogg\":\n        case \"oga\":\n        case \"spx\":\n        case \"ogg\":\n        case \"wav\":\n        case \"mp4\":\n        case \"ogg\":\n        case \"ogv\":\n        case \"webm\":\n            return \"media\";*/\n        default:\n            return null;\n    }\n};\n\n/**\n *\n * @param {URL|String|LoaderResource} arg\n * @returns {Boolean}\n */\nexport const isCORS = arg => {\n    arg = getURL(arg);\n\n    return (\n        arg.hostname !== window.location.hostname ||\n        arg.protocol !== window.location.protocol\n    );\n};\n","import { getURL, prop, isSupportedElement } from \"./loader.utils.mjs\";\n\n// ...\nconst collection = new WeakMap();\n\n// ...\nconst build = data => {\n    let o = {};\n\n    if (isSupportedElement(data)) {\n        o.el = data;\n        o.url = getURL(prop(o.el, \"dataset.src\")); // TODO: find a way to get currentSrc without triggering load\n    } else {\n        o.el = prop(data, \"el\");\n        o.url = data instanceof URL ? data : prop(data, \"url\");\n    }\n\n    o.blob = prop(data, \"blob\");\n\n    return o;\n};\n\n// ...\n// TODO: refactor to avoid \"override\" param\nexport default class LoaderResource {\n    constructor(data, override) {\n        let o = build(data);\n\n        if (collection.has(o.url) && !override) {\n            o = collection.get(o.url);\n        }\n\n        if (collection.has(o.el) && !override) {\n            o = collection.get(o.el);\n        }\n\n        this.el = o.el;\n        this.url = o.url;\n        this.blob = o.blob;\n\n        collection.set(o.el || o.url, this);\n    }\n\n    static isLoaderResource(data) {\n        return data instanceof this;\n    }\n}\n","export const loadImage = (url, el = new Image()) =>\n    new Promise((resolve, reject) => {\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.src = url;\n    });\n\n/* export const loadMedia = (url, el = new Image()) =>\n    // TODO:\n    new Promise((resolve, reject) => {\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.src = url;\n    }); */\n\nexport const loadStyle = (url, el = document.createElement(\"div\")) => {\n    const sheet = new CSSStyleSheet();\n\n    const promise = sheet.replace(`@import url(\"${url}\")`);\n\n    if (\"adoptedStyleSheets\" in el) {\n        el.adoptedStyleSheets = [...el.adoptedStyleSheets, sheet];\n    }\n\n    return promise;\n};\n\n/*export const loadObject = (url, el = document.createElement(\"object\")) =>\n    new Promise((resolve, reject) => {\n        // TODO: check\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.data = url;\n\n        el.width = 0;\n        el.height = 0;\n\n        document.body.append(el);\n    });*/\n\nexport const loadScript = (url, el = document.createElement(\"script\")) =>\n    new Promise((resolve, reject) => {\n        // TODO: check\n        el.onload = () => resolve(el);\n        el.onerror = reject;\n\n        el.src = url;\n        el.async = true;\n\n        document.head.append(el);\n    });\n\nexport default {\n    image: (url, /*bool,*/ el) => loadImage(url, /*bool ?*/ el /*: void 0*/),\n    // media: (url, bool, el) => loadMedia(url, bool ? el : void 0),\n    script: (url /*, bool*/) =>\n        /*(bool ?*/ loadScript(url) /*: loadObject(url))*/,\n    style: (url /*, bool*/) => loadStyle(url, /*bool ?*/ document /*: void 0*/)\n};\n","import { createWorker } from \"./loader.utils.mjs\";\n\nexport const work = () => {\n    onmessage = async event => {\n        const data = event.data;\n\n        // ...\n        let message;\n        try {\n            const response = await fetch(data.href, data.options);\n            const blob = await response.blob();\n\n            message = {\n                status: response.status,\n                statusText: response.statusText,\n                blob: blob\n            };\n        } catch (e) {\n            message = {\n                status: 0,\n                statusText: e\n            };\n        }\n\n        // ...\n        message.href = data.href;\n        postMessage(message);\n    };\n};\n\nlet worker = null;\nexport default () => {\n    // ...\n    if (worker) {\n        return worker;\n    }\n\n    // ...\n    return (worker = createWorker(work));\n};\n","import loaderWorker from \"./loader.worker.mjs\";\nimport LoaderResource from \"./loader.resource.mjs\";\n\n// ...\nconst collection = {};\n\n/**\n *\n * @param {LoaderResource} resource\n * @param {Object} options\n */\nexport default async (resource, options = {}) => {\n    // ...\n    if (resource.url.href in collection) {\n        const el = resource.el;\n\n        resource = await collection[resource.url.href];\n\n        return new LoaderResource({ ...resource, ...{ el: el } }, true);\n    }\n\n    // ...\n    return (collection[resource.url.href] = new Promise((resolve, reject) => {\n        const worker = loaderWorker();\n\n        // ...\n        worker.postMessage({\n            href: resource.url.href,\n            options: options.fetch\n        });\n\n        // ...\n        worker.addEventListener(\"message\", event => {\n            const data = event.data;\n\n            // ...\n            if (data.href !== resource.url.href) {\n                return;\n            }\n\n            // ...\n            if (data.status === 200) {\n                resource = new LoaderResource(\n                    { ...resource, ...{ blob: data.blob } },\n                    true\n                );\n\n                resolve(resource);\n\n                return;\n            }\n\n            // ...\n            reject(new Error(`${data.statusText} ${data.href}`));\n        });\n    }));\n};\n","import Loaders from \"./loader.loaders.mjs\";\nimport _fetch from \"./loader.fetch.mjs\";\nimport { getLoaderType /*, isCORS */ } from \"./loader.utils.mjs\";\n\n/**\n *\n * @param {LoaderResource} resource\n * @param {Object} options\n */\nexport default async (resource, options /*, bool*/) => {\n    // ...\n    const el = resource.el;\n\n    // ...\n    try {\n        resource = await _fetch(resource, options);\n        resource.el = el;\n    } catch (e) {}\n\n    // ...\n    const type = getLoaderType(resource);\n    if (!(type in Loaders)) {\n        throw new Error(\"invalid type\");\n    }\n\n    // ...\n    const url = !!resource.blob\n        ? URL.createObjectURL(resource.blob)\n        : resource.url.href;\n\n    // ...\n    await Loaders[type](url, /* bool,*/ resource.el).finally(() =>\n        URL.revokeObjectURL(url)\n    );\n\n    return resource;\n};\n","import { getURL, isSupportedElement } from \"./loader.utils.mjs\";\nimport LoaderResource from \"./loader.resource.mjs\";\nimport _load from \"./loader.load.mjs\";\nimport _fetch from \"./loader.fetch.mjs\";\n\nexport default class Loader {\n    constructor(options) {\n        // this way fetch throws but you don't get double download\n        // TODO: check if opt makes sense\n        this.options = {\n            ...{ fetch: { cors: \"no-cors\" } },\n            ...options\n        };\n    }\n\n    /**\n     *\n     * @param {String|Array|LoaderResource|HTMLElement|NodeList} arg\n     * @returns {Array|Promise}\n     */\n    fetch(arg) {\n        // ...\n        if (arg instanceof NodeList) {\n            return this.fetch([...arg]);\n        }\n\n        // ...\n        if (Array.isArray(arg)) {\n            return arg.map(a => this.fetch(a));\n        }\n\n        // ...\n        if (typeof arg === \"string\") {\n            return this.fetch(getURL(arg));\n        }\n\n        // ...\n        if (isSupportedElement(arg) || arg instanceof URL) {\n            return this.fetch(new LoaderResource(arg));\n        }\n\n        // ...\n        if (LoaderResource.isLoaderResource(arg)) {\n            return _fetch(arg, this.options);\n        }\n\n        // ...\n        return Promise.reject(new Error(\"invalid argument\"));\n    }\n\n    /**\n     * @param {String|Array|LoaderResource|HTMLElement|NodeList|URL} arg\n     * @returns {Array|Promise}\n     */\n    load(arg) {\n        if (arg instanceof NodeList) {\n            return this.load([...arg]);\n        }\n\n        // ...\n        if (Array.isArray(arg)) {\n            return arg.map(a => this.load(a));\n        }\n\n        // ...\n        if (typeof arg === \"string\") {\n            return this.load(getURL(arg));\n        }\n\n        // ...\n        if (isSupportedElement(arg) || arg instanceof URL) {\n            return this.load(new LoaderResource(arg));\n        }\n\n        // ...\n        if (LoaderResource.isLoaderResource(arg)) {\n            return _load(arg, this.options /*, true*/);\n        }\n\n        // ...\n        return Promise.reject(new Error(\"invalid argument\"));\n    }\n}\n"],"file":"loader.min.js"}