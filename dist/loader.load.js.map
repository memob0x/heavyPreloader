{"version":3,"file":"loader.load.js","sources":["src/loader.load.css.mjs","src/loader.load.html.mjs","src/loader.load.image.mjs","src/loader.load.javascript.mjs","src/loader.load.mjs"],"sourcesContent":["export default async (blob, options) => {\n    //\n    options = { ...{ element: document }, options };\n\n    //\n    const url = URL.createObjectURL(blob);\n\n    //\n    const sheet = new CSSStyleSheet();\n\n    //\n    await sheet.replace(`@import url(\"${url}\")`);\n\n    //\n    URL.revokeObjectURL(url);\n\n    //\n    if (\n        typeof options.element === \"object\" &&\n        \"adoptedStyleSheets\" in options.element\n    ) {\n        options.element.adoptedStyleSheets = [\n            ...options.element.adoptedStyleSheets,\n            sheet,\n        ];\n    }\n\n    //\n    return sheet;\n};\n","export default async (blob, options) => {\n    //\n    const reader = new FileReader();\n\n    //\n    const promise = new Promise((resolve) =>\n        reader.addEventListener(\"loadend\", (buffer) =>\n            resolve(buffer.srcElement.result)\n        )\n    );\n\n    //\n    reader.readAsText(blob);\n\n    //\n    let result = await promise;\n\n    //\n    if (\n        options &&\n        typeof options.filter === \"string\" &&\n        options.filter.length\n    ) {\n        //\n        result = new DOMParser().parseFromString(result, \"text/html\").body;\n        //\n        result = [...result.querySelectorAll(options.filter)];\n        //\n        result = result.length\n            ? result.map((x) => x.outerHTML).reduce((x, y) => x + y)\n            : result;\n    }\n\n    //\n    if (\n        options &&\n        options.element &&\n        options.element instanceof HTMLElement &&\n        result &&\n        typeof result === \"string\" &&\n        result.length\n    ) {\n        options.element.innerHTML = result;\n    }\n\n    //\n    return promise;\n};\n","export default async (blob, options) => {\n    //\n    const image =\n        options && options.element instanceof HTMLImageElement\n            ? options.element\n            : new Image();\n\n    //\n    const url = URL.createObjectURL(blob);\n\n    //\n    const promise = new Promise((resolve, reject) => {\n        image.onload = resolve;\n        image.onerror = () =>\n            reject(new Error(`Error loading image ${blob.type}`));\n    });\n\n    //\n    image.src = url;\n\n    //\n    const result = await promise;\n\n    //\n    URL.revokeObjectURL(url);\n\n    //\n    return result;\n};\n","export default async (blob) => {\n    //\n    const url = URL.createObjectURL(blob);\n\n    //\n    const result = await import(url);\n\n    //\n    URL.revokeObjectURL(url);\n\n    //\n    return result;\n};\n","import css from \"./loader.load.css.mjs\";\nimport html from \"./loader.load.html.mjs\";\nimport image from \"./loader.load.image.mjs\";\nimport javascript from \"./loader.load.javascript.mjs\";\n\n/**\n *\n */\nexport default new (class LoaderLoad {\n    constructor() {\n        // loaders closure, filled with default loaders\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n        this.loaders = {\n            image: image,\n            html: html,\n            css: css,\n            javascript: javascript,\n        };\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        this.loaders[type] = loader;\n    }\n\n    /**\n     * Loads a resource, which usually consists in attaching it to an existent DOM element\n     * @private\n     * @param {Blob} blob The resource to be loaded in Blob form\n     * @param {Object} options The resource load options\n     * @returns {Promise} The resource load in promise form\n     */\n    async load(blob, options) {\n        const type = blob.type;\n\n        //...\n        const keys = type.split(\"/\").reduce((x, y) => [type, x, y]);\n\n        // ...\n        for (const key in keys) {\n            const loader = keys[key];\n\n            if (loader in this.loaders) {\n                return await this.loaders[loader](blob, options);\n            }\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid ${blob.type} media type passed to Loader class \"load\" method.`\n        );\n    }\n})();\n"],"names":[],"mappings":"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"}