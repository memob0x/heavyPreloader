{"version":3,"sources":["loader.load.image.mjs"],"names":["global","factory","exports","module","define","amd","self","Loader","loader_load_image","blob","options","image","element","HTMLImageElement","Image","url","URL","createObjectURL","promise","Promise","resolve","reject","onload","onerror","Error","type","src","result","revokeObjectURL"],"mappings":";;;;;;;;AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AACxB,UAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAAC,QAAD,EAAWH,OAAX,CAAnD,IACCD,MAAM,GAAGA,MAAM,IAAIM,IAAnB,EAAyBN,MAAM,CAACO,MAAP,GAAgBN,OAAO,EADjD,CADA;AAGH,CAJA,UAIQ,YAAY;AAAE;;AAEnB,MAAIO,iBAAiB;AAAA,yDAAG,iBAAOC,IAAP,EAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,cAAAA,KAFc,GAGhBD,OAAO,IAAIA,OAAO,CAACE,OAAR,YAA2BC,gBAAtC,GACMH,OAAO,CAACE,OADd,GAEM,IAAIE,KAAJ,EALU;AAQdC,cAAAA,GARc,GAQRC,GAAG,CAACC,eAAJ,CAAoBR,IAApB,CARQ;AAWdS,cAAAA,OAXc,GAWJ,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CV,gBAAAA,KAAK,CAACW,MAAN,GAAeF,OAAf;;AACAT,gBAAAA,KAAK,CAACY,OAAN,GAAgB;AAAA,yBACZF,MAAM,CAAC,IAAIG,KAAJ,+BAAiCf,IAAI,CAACgB,IAAtC,EAAD,CADM;AAAA,iBAAhB;AAEH,eAJe,CAXI;AAkBpBd,cAAAA,KAAK,CAACe,GAAN,GAAYX,GAAZ;AAlBoB;AAAA,qBAqBCG,OArBD;;AAAA;AAqBdS,cAAAA,MArBc;AAwBpBX,cAAAA,GAAG,CAACY,eAAJ,CAAoBb,GAApB;AAxBoB,+CA2BbY,MA3Ba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBnB,iBAAiB;AAAA;AAAA;AAAA,KAArB;;AA8BA,SAAOA,iBAAP;AAEH,CAtCA,CAAD","file":"loader.load.image.es5.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('Loader', factory) :\n    (global = global || self, global.Loader = factory());\n}(this, (function () { 'use strict';\n\n    var loader_load_image = async (blob, options) => {\n        //\n        const image =\n            options && options.element instanceof HTMLImageElement\n                ? options.element\n                : new Image();\n\n        //\n        const url = URL.createObjectURL(blob);\n\n        //\n        const promise = new Promise((resolve, reject) => {\n            image.onload = resolve;\n            image.onerror = () =>\n                reject(new Error(`Error loading image ${blob.type}`));\n        });\n\n        //\n        image.src = url;\n\n        //\n        const result = await promise;\n\n        //\n        URL.revokeObjectURL(url);\n\n        //\n        return result;\n    };\n\n    return loader_load_image;\n\n})));\n"]}