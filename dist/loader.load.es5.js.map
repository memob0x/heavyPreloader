{"version":3,"sources":["loader.load.mjs"],"names":["global","factory","exports","module","define","amd","self","Loader","css","blob","options","element","document","url","URL","createObjectURL","sheet","CSSStyleSheet","replace","revokeObjectURL","adoptedStyleSheets","html","reader","FileReader","promise","Promise","resolve","addEventListener","buffer","srcElement","result","readAsText","filter","length","DOMParser","parseFromString","body","querySelectorAll","map","x","outerHTML","reduce","y","HTMLElement","innerHTML","image","HTMLImageElement","Image","reject","onload","onerror","Error","type","src","javascript","loader_load","loaders","loader","keys","split","key","TypeError"],"mappings":"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","file":"loader.load.es5.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('Loader', factory) :\n    (global = global || self, global.Loader = factory());\n}(this, (function () { 'use strict';\n\n    var css = async (blob, options) => {\n        //\n        options = { ...{ element: document }, options };\n\n        //\n        const url = URL.createObjectURL(blob);\n\n        //\n        const sheet = new CSSStyleSheet();\n\n        //\n        await sheet.replace(`@import url(\"${url}\")`);\n\n        //\n        URL.revokeObjectURL(url);\n\n        //\n        if (\n            typeof options.element === \"object\" &&\n            \"adoptedStyleSheets\" in options.element\n        ) {\n            options.element.adoptedStyleSheets = [\n                ...options.element.adoptedStyleSheets,\n                sheet,\n            ];\n        }\n\n        //\n        return sheet;\n    };\n\n    var html = async (blob, options) => {\n        //\n        const reader = new FileReader();\n\n        //\n        const promise = new Promise((resolve) =>\n            reader.addEventListener(\"loadend\", (buffer) =>\n                resolve(buffer.srcElement.result)\n            )\n        );\n\n        //\n        reader.readAsText(blob);\n\n        //\n        let result = await promise;\n\n        //\n        if (\n            options &&\n            typeof options.filter === \"string\" &&\n            options.filter.length\n        ) {\n            //\n            result = new DOMParser().parseFromString(result, \"text/html\").body;\n            //\n            result = [...result.querySelectorAll(options.filter)];\n            //\n            result = result.length\n                ? result.map((x) => x.outerHTML).reduce((x, y) => x + y)\n                : result;\n        }\n\n        //\n        if (\n            options &&\n            options.element &&\n            options.element instanceof HTMLElement &&\n            result &&\n            typeof result === \"string\" &&\n            result.length\n        ) {\n            options.element.innerHTML = result;\n        }\n\n        //\n        return promise;\n    };\n\n    var image = async (blob, options) => {\n        //\n        const image =\n            options && options.element instanceof HTMLImageElement\n                ? options.element\n                : new Image();\n\n        //\n        const url = URL.createObjectURL(blob);\n\n        //\n        const promise = new Promise((resolve, reject) => {\n            image.onload = resolve;\n            image.onerror = () =>\n                reject(new Error(`Error loading image ${blob.type}`));\n        });\n\n        //\n        image.src = url;\n\n        //\n        const result = await promise;\n\n        //\n        URL.revokeObjectURL(url);\n\n        //\n        return result;\n    };\n\n    var javascript = async (blob) => {\n        //\n        const url = URL.createObjectURL(blob);\n\n        //\n        const result = await import(url);\n\n        //\n        URL.revokeObjectURL(url);\n\n        //\n        return result;\n    };\n\n    /**\n     *\n     */\n    var loader_load = new (class LoaderLoad {\n        constructor() {\n            // loaders closure, filled with default loaders\n            // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n            this.loaders = {\n                image: image,\n                html: html,\n                css: css,\n                javascript: javascript,\n            };\n        }\n\n        /**\n         *\n         * @param {String} type\n         * @param {Function} loader\n         * @returns {void}\n         */\n        register(type, loader) {\n            this.loaders[type] = loader;\n        }\n\n        /**\n         * Loads a resource, which usually consists in attaching it to an existent DOM element\n         * @private\n         * @param {Blob} blob The resource to be loaded in Blob form\n         * @param {Object} options The resource load options\n         * @returns {Promise} The resource load in promise form\n         */\n        async load(blob, options) {\n            const type = blob.type;\n\n            //...\n            const keys = type.split(\"/\").reduce((x, y) => [type, x, y]);\n\n            // ...\n            for (const key in keys) {\n                const loader = keys[key];\n\n                if (loader in this.loaders) {\n                    return await this.loaders[loader](blob, options);\n                }\n            }\n\n            // ...\n            throw new TypeError(\n                `Invalid ${blob.type} media type passed to Loader class \"load\" method.`\n            );\n        }\n    })();\n\n    return loader_load;\n\n})));\n"]}