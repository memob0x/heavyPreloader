{"version":3,"file":"loader.worker.js","sources":["src/loader.worker.mjs"],"sourcesContent":["/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createDynamicWorker = (body) => {\n    // ...\n    const url = URL.createObjectURL(\n        new Blob([\"(\", body.toString(), \")()\"], {\n            type: \"application/javascript\",\n        })\n    );\n\n    // ...\n    const worker = new Worker(url);\n\n    // ...\n    URL.revokeObjectURL(url);\n\n    // ...\n    return worker;\n};\n\n/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createFetchWorker = () =>\n    createDynamicWorker(\n        () =>\n            (onmessage = async (event) => {\n                //\n                try {\n                    const response = await fetch(\n                        event.data.href,\n                        event.data.options\n                    );\n                    const blob = await response.blob();\n\n                    event.data.status = response.status;\n                    event.data.statusText = response.statusText;\n                    event.data.blob = blob;\n                } catch (e) {\n                    event.data.statusText = e;\n                }\n\n                // ...\n                postMessage(event.data);\n            })\n    );\n\n/**\n *\n */\nexport default new (class LoaderWorker {\n    constructor() {\n        this._worker = null;\n\n        this._requests = 0;\n    }\n\n    terminate() {\n        //\n        //\n        if (this._requests > 0) {\n            this._requests--;\n        }\n\n        //\n        if (this._requests === 0) {\n            this._worker.terminate();\n\n            this._worker = null;\n        }\n\n        //\n        return this._worker;\n    }\n\n    worker() {\n        // ...\n        this._requests++;\n\n        // ...\n        if (this._worker) {\n            return this._worker;\n        }\n\n        // ...\n        this._worker = createFetchWorker();\n\n        //\n        return this._worker;\n    }\n})();\n"],"names":[],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,mBAAmB,GAAG,CAAC,IAAI,KAAK;IACtC;IACA,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,eAAe;IACnC,QAAQ,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,EAAE;IAChD,YAAY,IAAI,EAAE,wBAAwB;IAC1C,SAAS,CAAC;IACV,KAAK,CAAC;AACN;IACA;IACA,IAAI,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;AACnC;IACA;IACA,IAAI,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAC7B;IACA;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,iBAAiB,GAAG;IAC1B,IAAI,mBAAmB;IACvB,QAAQ;IACR,aAAa,SAAS,GAAG,OAAO,KAAK,KAAK;IAC1C;IACA,gBAAgB,IAAI;IACpB,oBAAoB,MAAM,QAAQ,GAAG,MAAM,KAAK;IAChD,wBAAwB,KAAK,CAAC,IAAI,CAAC,IAAI;IACvC,wBAAwB,KAAK,CAAC,IAAI,CAAC,OAAO;IAC1C,qBAAqB,CAAC;IACtB,oBAAoB,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;AACvD;IACA,oBAAoB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IACxD,oBAAoB,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IAChE,oBAAoB,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC3C,iBAAiB,CAAC,OAAO,CAAC,EAAE;IAC5B,oBAAoB,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC9C,iBAAiB;AACjB;IACA;IACA,gBAAgB,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxC,aAAa,CAAC;IACd,KAAK,CAAC;AACN;IACA;IACA;IACA;AACA,wBAAe,KAAK,MAAM,YAAY,CAAC;IACvC,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B;IACA,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IAC3B,KAAK;AACL;IACA,IAAI,SAAS,GAAG;IAChB;IACA;IACA,QAAQ,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;IAChC,YAAY,IAAI,CAAC,SAAS,EAAE,CAAC;IAC7B,SAAS;AACT;IACA;IACA,QAAQ,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;IAClC,YAAY,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;AACrC;IACA,YAAY,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;IAC5B,KAAK;AACL;IACA,IAAI,MAAM,GAAG;IACb;IACA,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB;IACA;IACA,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;IAC1B,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,iBAAiB,EAAE,CAAC;AAC3C;IACA;IACA,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;IAC5B,KAAK;IACL,CAAC,GAAG;;;;;;;;"}