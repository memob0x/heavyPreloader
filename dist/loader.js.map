{"version":3,"file":"loader.js","sources":["src/loader.utils.mjs","src/loader.worker.mjs","src/loader.fetch.mjs","src/loader.mjs"],"sourcesContent":["/**\n *\n * @private\n * @static\n * @param {String} href\n * @returns {URL}\n */\nexport const getURL = (href) =>\n    new URL(\n        ((a) => {\n            a.href = href;\n\n            return a;\n        })(document.createElement(\"a\"))\n    );\n\n/**\n *\n * @private\n * @static\n * @param {Function} work\n * @returns {Worker}\n */\nexport const createWorker = (work) => {\n    if (typeof work !== \"function\") {\n        throw new TypeError(\n            `Invalid argment of type ${typeof work} passed to Loader class internal \"createWorker\" function.`\n        );\n    }\n\n    const url = URL.createObjectURL(\n        new Blob([\"(\", work.toString(), \")()\"], {\n            type: \"application/javascript\",\n        })\n    );\n\n    const worker = new Worker(url);\n\n    URL.revokeObjectURL(url);\n\n    return worker;\n};\n","import { createWorker } from \"./loader.utils.mjs\";\n\n/**\n *\n * @private\n * @static\n */\nexport const work = () => {\n    onmessage = async (event) => {\n        const data = event.data;\n\n        // ...\n        let message;\n        try {\n            const response = await fetch(data.href, data.options);\n            const blob = await response.blob();\n\n            message = {\n                status: response.status,\n                statusText: response.statusText,\n                blob: blob,\n            };\n        } catch (e) {\n            message = {\n                status: 0,\n                statusText: e,\n            };\n        }\n\n        // ...\n        message.href = data.href;\n        postMessage(message);\n    };\n};\n\n// ...\nlet worker = null;\n\n/**\n *\n * @private\n */\nexport const getOrCreateWorker = () =>\n    worker ? worker : (worker = createWorker(work));\n\n/**\n *\n * @private\n */\nexport const possiblyTerminateWorker = () => {\n    // TODO: check if no longer in use\n    // worker.terminate();\n    // worker = null;\n};\n","import { getOrCreateWorker } from \"./loader.worker.mjs\";\n\n// ...\nconst cache = {};\n\n/**\n *\n * @private\n * @param {String} href\n * @param {Object} options\n */\nexport default async (href, options = {}) => {\n    // ...\n    if (href in cache) {\n        return await cache[href];\n    }\n\n    // ...\n    return (cache[href] = new Promise((resolve, reject) => {\n        const worker = getOrCreateWorker();\n\n        // ...\n        worker.postMessage({\n            href: href,\n            options: options.fetch,\n        });\n\n        // ...\n        worker.addEventListener(\"message\", (event) => {\n            const data = event.data;\n\n            // ...\n            if (data.href !== href) {\n                return;\n            }\n\n            // ...\n            if (data.status === 200) {\n                resolve(data.blob);\n\n                return;\n            }\n\n            // ...\n            reject(new Error(`${data.statusText} for ${data.href} resource.`));\n        });\n    }));\n};\n","import { getURL } from \"./loader.utils.mjs\";\nimport fetch from \"./loader.fetch.mjs\";\n\nexport default class Loader {\n    /**\n     *\n     * @param {Object} options\n     */\n    constructor(options) {\n        this.options = { ...{ fetch: { cors: \"no-cors\" } }, ...options };\n    }\n\n    /**\n     *\n     * @param {Array.<String>|Array.<URL>|String|URL} arg\n     * @returns {Array.<Promise>|Promise}\n     */\n    fetch(arg) {\n        // ...\n        if (Array.isArray(arg)) {\n            return arg.map((a) => this.fetch(a));\n        }\n\n        // ...\n        if (typeof arg === \"string\") {\n            return this.fetch(getURL(arg));\n        }\n\n        // ...\n        if (arg instanceof URL) {\n            return fetch(arg.href, this.options);\n        }\n\n        // ...\n        return Promise.reject(\n            new TypeError(\n                `Invalid argment of type ${typeof arg} passed to Loader class \"fetch\" method.`\n            )\n        );\n    }\n}\n"],"names":["fetch"],"mappings":"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"}