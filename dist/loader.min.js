!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Loader",t):(e=e||self).Loader=t()}(this,function(){"use strict";const e=()=>onmessage=(async e=>{try{const t=await fetch(e.data.href,e.data.options),a=await t.blob();e.data.status=t.status,e.data.statusText=t.statusText,e.data.blob=a}catch(t){e.data.statusText=t}postMessage(e.data)});let t=null,a=0;const r={};var n=async(n,s)=>!0===(s={cache:!0,fetch:{},...s}).cache&&n in r?await r[n]:r[n]=new Promise((r,o)=>{const c=(()=>{if(a++,t)return t;const r=URL.createObjectURL(new Blob(["(",e.toString(),")()"],{type:"application/javascript"}));return t=new Worker(r),URL.revokeObjectURL(r),t})();c.postMessage({href:n,options:s.fetch}),c.addEventListener("message",e=>{const s=e.data;s.href===n&&(--a<=0&&(t.terminate(),t=null),200!==s.status?o(new Error(`${s.statusText} for ${s.href} resource.`)):r(s.blob))})}),s=async(e,t)=>{switch(e.type){case"image/png":case"image/jpeg":return await(async(e,t)=>{const a=t.element instanceof HTMLImageElement?t.element:new Image,r=URL.createObjectURL(e),n=new Promise((e,t)=>{a.onload=e,a.onerror=t});a.src=r;const s=await n;return URL.revokeObjectURL(r),s})(e,t);case"text/html":return await(async(e,t)=>{const a=new FileReader,r=new Promise(e=>a.addEventListener("loadend",t=>e(t.srcElement.result)));a.readAsText(e);let n=await r;return"string"==typeof t.filter&&t.filter.length&&(n=(n=[...(n=(new DOMParser).parseFromString(n,"text/html").body).querySelectorAll(t.filter)]).map(e=>e.outerHTML).reduce((e,t)=>e+t)),t.element&&t.element instanceof HTMLElement&&(t.element.innerHTML=n),r})(e,t);case"text/css":return await(async(e,t)=>{t={element:document,options:t};const a=URL.createObjectURL(e),r=new CSSStyleSheet;return await r.replace(`@import url("${a}")`),URL.revokeObjectURL(a),"object"==typeof t.element&&"adoptedStyleSheets"in t.element&&(t.element.adoptedStyleSheets=[...t.element.adoptedStyleSheets,r]),r})(e,t);case"text/javascript":return await(async e=>{const t=URL.createObjectURL(e),a=await import(t);return URL.revokeObjectURL(t),a})(e)}throw new TypeError(`Invalid argment of type ${typeof e} passed to Loader class "fetch" method.`)};return class{constructor(){}async fetch(e,t){if(Array.isArray(e))return await e.map(e=>this.fetch(e,t));if("string"==typeof e){const a=document.createElement("a");return a.href=e,await this.fetch(new URL(a),t)}if(e instanceof URL)return await n(e.href,t);throw new TypeError(`Invalid argment of type ${typeof e} passed to Loader class "fetch" method.`)}async load(e,t){if(Array.isArray(e)){const a=Array.isArray(t);return await e.map((e,r)=>this.load(e,a?t[r]:t))}const a=e instanceof Blob?e:await this.fetch(e,t);return await s(a,t)}}});
//# sourceMappingURL=loader.min.js.map
