{"version":3,"file":"loader.es5.js","sources":["../src/loader.utils.mjs","../src/loader.worker.mjs","../src/loader.fetch.mjs","../src/loader.load.css.mjs","../src/loader.load.html.mjs","../src/loader.load.image.mjs","../src/loader.load.javascript.mjs","../src/loader.load.mjs","../src/loader.mjs"],"sourcesContent":["const a = document.createElement(\"a\");\n\n/**\n *\n * @param {String} path\n * @returns {URL}\n */\nexport const getURL = (path) => {\n    a.href = path;\n\n    return new URL(a.href);\n};\n","/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createDynamicWorker = (body) => {\n    // ...\n    const url = URL.createObjectURL(\n        new Blob([\"(\", body.toString(), \")()\"], {\n            type: \"application/javascript\",\n        })\n    );\n\n    // ...\n    const worker = new Worker(url);\n\n    // ...\n    URL.revokeObjectURL(url);\n\n    // ...\n    return worker;\n};\n\n/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createFetchWorker = () =>\n    createDynamicWorker(\n        () =>\n            (onmessage = async (event) => {\n                //\n                try {\n                    const response = await fetch(\n                        event.data.href,\n                        event.data.options\n                    );\n                    const blob = await response.blob();\n\n                    event.data.status = response.status;\n                    event.data.statusText = response.statusText;\n                    event.data.blob = blob;\n                } catch (e) {\n                    event.data.statusText = e;\n                }\n\n                // ...\n                postMessage(event.data);\n            })\n    );\n\n/**\n *\n */\nexport default new (class LoaderWorker {\n    constructor() {\n        this._worker = null;\n\n        this._requests = 0;\n    }\n\n    terminate() {\n        //\n        //\n        if (this._requests > 0) {\n            this._requests--;\n        }\n\n        //\n        if (this._requests === 0) {\n            this._worker.terminate();\n\n            this._worker = null;\n        }\n\n        //\n        return this._worker;\n    }\n\n    worker() {\n        // ...\n        this._requests++;\n\n        // ...\n        if (this._worker) {\n            return this._worker;\n        }\n\n        // ...\n        this._worker = createFetchWorker();\n\n        //\n        return this._worker;\n    }\n})();\n","import lworker from \"./loader.worker.mjs\";\n\n/**\n *\n */\nexport default new (class LoaderFetch {\n    constructor() {\n        // ...\n        this.cache = {};\n    }\n\n    /**\n     * Fetches a resource url in the secondary thread and retrieves it as a blob\n     * @private\n     * @param {String} href The resource url to be fetched\n     * @param {Object} options The fetch options object\n     * @returns {Promise} The fetch promise\n     */\n    async fetch(href, options) {\n        // ...\n        options = {\n            ...{\n                cache: true,\n                fetch: {},\n            },\n            ...options,\n        };\n\n        // ...\n        if (options.cache === true && href in this.cache) {\n            return await this.cache[href];\n        }\n\n        // ...\n        return (this.cache[href] = new Promise((resolve, reject) => {\n            //\n            const worker = lworker.worker();\n\n            // ...\n            worker.postMessage({\n                href: href,\n                options: options.fetch,\n            });\n\n            // ...\n            // TODO: possibly use messageerror for reject?\n            worker.addEventListener(\"message\", (event) => {\n                const data = event.data;\n\n                // ...\n                if (data.href !== href) {\n                    return;\n                }\n\n                //\n                lworker.terminate();\n\n                // ...\n                if (data.status === 200) {\n                    resolve(data.blob);\n\n                    return;\n                }\n\n                // ...\n                reject(\n                    new Error(`${data.statusText} for ${data.href} resource.`)\n                );\n            });\n        }));\n    }\n})();\n","export default async (blob, options) => {\n    //\n    options = { ...{ element: document }, options };\n\n    //\n    const url = URL.createObjectURL(blob);\n\n    //\n    const sheet = new CSSStyleSheet();\n\n    //\n    await sheet.replace(`@import url(\"${url}\")`);\n\n    //\n    URL.revokeObjectURL(url);\n\n    //\n    if (\n        typeof options.element === \"object\" &&\n        \"adoptedStyleSheets\" in options.element\n    ) {\n        options.element.adoptedStyleSheets = [\n            ...options.element.adoptedStyleSheets,\n            sheet,\n        ];\n    }\n\n    //\n    return sheet;\n};\n","export default async (blob, options) => {\n    //\n    const reader = new FileReader();\n\n    //\n    const promise = new Promise((resolve) =>\n        reader.addEventListener(\"loadend\", (buffer) =>\n            resolve(buffer.srcElement.result)\n        )\n    );\n\n    //\n    reader.readAsText(blob);\n\n    //\n    let result = await promise;\n\n    //\n    if (\n        options &&\n        typeof options.filter === \"string\" &&\n        options.filter.length\n    ) {\n        //\n        result = new DOMParser().parseFromString(result, \"text/html\").body;\n        //\n        result = [...result.querySelectorAll(options.filter)];\n        //\n        result = result.length\n            ? result.map((x) => x.outerHTML).reduce((x, y) => x + y)\n            : result;\n    }\n\n    //\n    if (\n        options &&\n        options.element &&\n        options.element instanceof HTMLElement &&\n        result &&\n        typeof result === \"string\" &&\n        result.length\n    ) {\n        options.element.innerHTML = result;\n    }\n\n    //\n    return promise;\n};\n","export default async (blob, options) => {\n    //\n    const image =\n        options && options.element instanceof HTMLImageElement\n            ? options.element\n            : new Image();\n\n    //\n    const url = URL.createObjectURL(blob);\n\n    //\n    const promise = new Promise((resolve, reject) => {\n        image.onload = resolve;\n        image.onerror = () =>\n            reject(new Error(`Error loading image ${blob.type}`));\n    });\n\n    //\n    image.src = url;\n\n    //\n    const result = await promise;\n\n    //\n    URL.revokeObjectURL(url);\n\n    //\n    return result;\n};\n","export default async (blob) => {\n    //\n    const url = URL.createObjectURL(blob);\n\n    //\n    const result = await import(url);\n\n    //\n    URL.revokeObjectURL(url);\n\n    //\n    return result;\n};\n","import css from \"./loader.load.css.mjs\";\nimport html from \"./loader.load.html.mjs\";\nimport image from \"./loader.load.image.mjs\";\nimport javascript from \"./loader.load.javascript.mjs\";\n\n/**\n *\n */\nexport default new (class LoaderLoad {\n    constructor() {\n        // loaders closure, filled with default loaders\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n        this.loaders = {\n            image: image,\n            html: html,\n            css: css,\n            javascript: javascript,\n        };\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        this.loaders[type] = loader;\n    }\n\n    /**\n     * Loads a resource, which usually consists in attaching it to an existent DOM element\n     * @private\n     * @param {Blob} blob The resource to be loaded in Blob form\n     * @param {Object} options The resource load options\n     * @returns {Promise} The resource load in promise form\n     */\n    async load(blob, options) {\n        const type = blob.type;\n\n        //...\n        const keys = type.split(\"/\").reduce((x, y) => [type, x, y]);\n\n        // ...\n        for (const key in keys) {\n            const loader = keys[key];\n\n            if (loader in this.loaders) {\n                return await this.loaders[loader](blob, options);\n            }\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid ${blob.type} media type passed to Loader class \"load\" method.`\n        );\n    }\n})();\n","import { getURL } from \"./loader.utils.mjs\";\nimport lfetch from \"./loader.fetch.mjs\";\nimport lload from \"./loader.load.mjs\";\n\nexport default class Loader {\n    constructor() {}\n\n    /**\n     * Fetches one or more resources url\n     * @param {Array.<String>|Array.<URL>|String|URL} resource The resource(s) url to be fetched in a separate thread\n     * @param {Object} options The fetch options object\n     * @returns {Array.<Promise>|Promise} The fetch promise(s)\n     */\n    async fetch(resource, options) {\n        // ...\n        if (Array.isArray(resource)) {\n            return await resource.map((a) => this.fetch(a, options));\n        }\n\n        // ...\n        if (typeof resource === \"string\") {\n            return await this.fetch(getURL(resource), options);\n        }\n\n        // ...\n        if (resource instanceof URL) {\n            return await lfetch.fetch(resource.href, options);\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid argment of type ${typeof resource} passed to Loader class \"fetch\" method.`\n        );\n    }\n\n    /**\n     * Loads one or more resources url considering the passed options object and the resource mime type to be loaded\n     * @param {Array.<String>|Array.<URL>|Array.<Blob>|String|URL|Blob} resource The resource(s) to be loaded\n     * @param {Object} options The loader type options\n     * @returns {Array.<Promise>|Promise} The load promise(s)\n     */\n    async load(resource, options) {\n        // ...\n        if (Array.isArray(resource)) {\n            const isArrayOpts = Array.isArray(options);\n\n            return await resource.map((a, i) =>\n                this.load(a, isArrayOpts ? options[i] : options)\n            );\n        }\n\n        // ...\n        const blob =\n            resource instanceof Blob\n                ? resource\n                : await this.fetch(resource, options);\n\n        // ...\n        return await lload.load(blob, options);\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        return lload.register(type, loader);\n    }\n}\n"],"names":["a","document","createElement","getURL","path","href","URL","createDynamicWorker","body","url","createObjectURL","Blob","toString","type","worker","Worker","revokeObjectURL","createFetchWorker","onmessage","event","fetch","data","options","response","blob","status","statusText","postMessage","_worker","_requests","terminate","cache","Promise","resolve","reject","lworker","addEventListener","Error","element","sheet","CSSStyleSheet","replace","adoptedStyleSheets","reader","FileReader","promise","buffer","srcElement","result","readAsText","filter","length","DOMParser","parseFromString","querySelectorAll","map","x","outerHTML","reduce","y","HTMLElement","innerHTML","image","HTMLImageElement","Image","onload","onerror","src","loaders","html","css","javascript","loader","keys","split","key","TypeError","Loader","resource","Array","isArray","lfetch","isArrayOpts","i","load","lload","register"],"mappings":"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"}