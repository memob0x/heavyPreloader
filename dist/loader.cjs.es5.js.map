{"version":3,"file":"loader.cjs.es5.js","sources":["../src/loader.utils.mjs","../src/loader.worker.mjs","../src/loader.fetch.mjs","../src/loader.load.mjs","../src/loader.mjs"],"sourcesContent":["const a = document.createElement(\"a\");\n\n/**\n *\n * @param {String} path\n * @returns {URL}\n */\nexport const getURL = (path) => {\n    a.href = path;\n\n    return new URL(a.href);\n};\n","/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createDynamicWorker = (body) => {\n    // ...\n    const url = URL.createObjectURL(\n        new Blob([\"(\", body.toString(), \")()\"], {\n            type: \"application/javascript\"\n        })\n    );\n\n    // ...\n    const worker = new Worker(url);\n\n    // ...\n    URL.revokeObjectURL(url);\n\n    // ...\n    return worker;\n};\n\n/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createFetchWorker = () =>\n    createDynamicWorker(\n        () =>\n            (onmessage = async (event) => {\n                //\n                try {\n                    const response = await fetch(\n                        event.data.href,\n                        event.data.options\n                    );\n                    const blob = await response.blob();\n\n                    event.data.status = response.status;\n                    event.data.statusText = response.statusText;\n                    event.data.blob = blob;\n                } catch (e) {\n                    event.data.statusText = e;\n                }\n\n                // ...\n                postMessage(event.data);\n            })\n    );\n\n/**\n *\n */\nexport default new (class LoaderWorker {\n    constructor() {\n        this._worker = null;\n\n        this._requests = 0;\n    }\n\n    terminate() {\n        //\n        //\n        if (this._requests > 0) {\n            this._requests--;\n        }\n\n        //\n        if (this._requests === 0) {\n            this._worker.terminate();\n\n            this._worker = null;\n        }\n\n        //\n        return this._worker;\n    }\n\n    worker() {\n        // ...\n        this._requests++;\n\n        // ...\n        if (this._worker) {\n            return this._worker;\n        }\n\n        // ...\n        this._worker = createFetchWorker();\n\n        //\n        return this._worker;\n    }\n})();\n","import lworker from \"./loader.worker.mjs\";\n\n/**\n *\n */\nexport default new (class LoaderFetch {\n    constructor() {\n        // ...\n        this.cache = {};\n    }\n\n    /**\n     * Fetches a resource url in the secondary thread and retrieves it as a blob\n     * @private\n     * @param {String} href The resource url to be fetched\n     * @param {Object} options The fetch options object\n     * @returns {Promise} The fetch promise\n     */\n    async fetch(href, options) {\n        // ...\n        options = {\n            ...{\n                cache: true,\n                fetch: {}\n            },\n            ...options\n        };\n\n        // ...\n        if (options.cache === true && href in this.cache) {\n            return await this.cache[href];\n        }\n\n        // ...\n        return (this.cache[href] = new Promise((resolve, reject) => {\n            //\n            const worker = lworker.worker();\n\n            // ...\n            worker.postMessage({\n                href: href,\n                options: options.fetch\n            });\n\n            // ...\n            // TODO: possibly use messageerror for reject?\n            worker.addEventListener(\"message\", (event) => {\n                const data = event.data;\n\n                // ...\n                if (data.href !== href) {\n                    return;\n                }\n\n                //\n                lworker.terminate();\n\n                // ...\n                if (data.status === 200) {\n                    resolve(data.blob);\n\n                    return;\n                }\n\n                // ...\n                reject(\n                    new Error(`${data.statusText} for ${data.href} resource.`)\n                );\n            });\n        }));\n    }\n})();\n","/**\n *\n */\nexport default new (class LoaderLoad {\n    constructor() {\n        // loaders closure, filled with default loaders\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n        this.loaders = {};\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        this.loaders[type] = loader;\n    }\n\n    /**\n     * Loads a resource, which usually consists in attaching it to an existent DOM element\n     * @private\n     * @param {Blob} blob The resource to be loaded in Blob form\n     * @param {Object} options The resource load options\n     * @returns {Promise} The resource load in promise form\n     */\n    async load(blob, options) {\n        const type = blob.type;\n\n        //...\n        const keys = type.split(\"/\").reduce((x, y) => [type, x, y]);\n\n        // ...\n        for (const key in keys) {\n            const loader = keys[key];\n\n            if (loader in this.loaders) {\n                return await this.loaders[loader](blob, options);\n            }\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid ${blob.type} media type passed to Loader class \"load\" method.`\n        );\n    }\n})();\n","import { getURL } from \"./loader.utils.mjs\";\nimport lfetch from \"./loader.fetch.mjs\";\nimport lload from \"./loader.load.mjs\";\n\nexport default class Loader {\n    constructor() {}\n\n    /**\n     * Fetches one or more resources url\n     * @param {Array.<String>|Array.<URL>|String|URL} resource The resource(s) url to be fetched in a separate thread\n     * @param {Object} options The fetch options object\n     * @returns {Array.<Promise>|Promise} The fetch promise(s)\n     */\n    async fetch(resource, options) {\n        // ...\n        if (Array.isArray(resource)) {\n            return await resource.map((a) => this.fetch(a, options));\n        }\n\n        // ...\n        if (typeof resource === \"string\") {\n            return await this.fetch(getURL(resource), options);\n        }\n\n        // ...\n        if (resource instanceof URL) {\n            return await lfetch.fetch(resource.href, options);\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid argment of type ${typeof resource} passed to Loader class \"fetch\" method.`\n        );\n    }\n\n    /**\n     * Loads one or more resources url considering the passed options object and the resource mime type to be loaded\n     * @param {Array.<String>|Array.<URL>|Array.<Blob>|String|URL|Blob} resource The resource(s) to be loaded\n     * @param {Object} options The loader type options\n     * @returns {Array.<Promise>|Promise} The load promise(s)\n     */\n    async load(resource, options) {\n        // ...\n        if (Array.isArray(resource)) {\n            const isArrayOpts = Array.isArray(options);\n\n            return await resource.map((a, i) =>\n                this.load(a, isArrayOpts ? options[i] : options)\n            );\n        }\n\n        // ...\n        const blob =\n            resource instanceof Blob\n                ? resource\n                : await this.fetch(resource, options);\n\n        // ...\n        return await lload.load(blob, options);\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        return lload.register(type, loader);\n    }\n}\n"],"names":["a","document","createElement","getURL","path","href","URL","createDynamicWorker","body","url","createObjectURL","Blob","toString","type","worker","Worker","revokeObjectURL","createFetchWorker","onmessage","event","fetch","data","options","response","blob","status","statusText","postMessage","_worker","_requests","terminate","cache","Promise","resolve","reject","lworker","addEventListener","Error","loaders","loader","keys","split","reduce","x","y","key","TypeError","Loader","resource","Array","isArray","map","lfetch","isArrayOpts","i","load","lload","register"],"mappings":"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"}