{"version":3,"sources":["unknown"],"names":["reader","FileReader","blob","promise","Promise","resolve","onload","buffer","srcElement","result","onerror","onabort","reject","Error","type","readAsText"],"mappings":"AACA,KAAMA,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CAGA,eAAgBC,IAAD,EAAU,CAErB,KAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAaC,OAAD,EAAa,CACrCL,MAAM,CAACM,MAAP,CAAiBC,MAAD,EAAYF,OAAO,CAACE,MAAM,CAACC,UAAP,CAAkBC,MAAnB,CAAnC,CACAT,MAAM,CAACU,OAAP,CAAiBV,MAAM,CAACW,OAAP,CAAiB,IAC9BC,MAAM,CAAC,GAAIC,CAAAA,KAAJ,CAAW,iBAAgBX,IAAI,CAACY,IAAK,YAArC,CAAD,CADV,CAEH,CAJe,CAAhB,CAOAd,MAAM,CAACe,UAAP,CAAkBb,IAAlB,EAGA,MAAOC,CAAAA,OAAP,CACH,CAbD","sourcesContent":["//\nconst reader = new FileReader();\n\n//\nexport default (blob) => {\n    //\n    const promise = new Promise((resolve) => {\n        reader.onload = (buffer) => resolve(buffer.srcElement.result);\n        reader.onerror = reader.onabort = () =>\n            reject(new Error(`Error loading ${blob.type} resource.`));\n    });\n\n    //\n    reader.readAsText(blob);\n\n    //\n    return promise;\n};\n"]}