{"version":3,"file":"loader.es.js","sources":["../src/loader.utils.mjs","../src/loader.worker.mjs","../src/loader.fetch.mjs","../src/loader.load.mjs","../src/loader.mjs"],"sourcesContent":["const a = document.createElement(\"a\");\n\n/**\n *\n * @param {String} path\n * @returns {URL}\n */\nexport const getURL = (path) => {\n    a.href = path;\n\n    return new URL(a.href);\n};\n","/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createDynamicWorker = (body) => {\n    // ...\n    const url = URL.createObjectURL(\n        new Blob([\"(\", body.toString(), \")()\"], {\n            type: \"application/javascript\"\n        })\n    );\n\n    // ...\n    const worker = new Worker(url);\n\n    // ...\n    URL.revokeObjectURL(url);\n\n    // ...\n    return worker;\n};\n\n/**\n *\n * @private\n * @static\n * TODO: provide unit test\n */\nconst createFetchWorker = () =>\n    createDynamicWorker(\n        () =>\n            (onmessage = async (event) => {\n                //\n                try {\n                    const response = await fetch(\n                        event.data.href,\n                        event.data.options\n                    );\n                    const blob = await response.blob();\n\n                    event.data.status = response.status;\n                    event.data.statusText = response.statusText;\n                    event.data.blob = blob;\n                } catch (e) {\n                    event.data.statusText = e;\n                }\n\n                // ...\n                postMessage(event.data);\n            })\n    );\n\n/**\n *\n */\nexport default new (class LoaderWorker {\n    constructor() {\n        this._worker = null;\n\n        this._requests = 0;\n    }\n\n    terminate() {\n        //\n        //\n        if (this._requests > 0) {\n            this._requests--;\n        }\n\n        //\n        if (this._requests === 0) {\n            this._worker.terminate();\n\n            this._worker = null;\n        }\n\n        //\n        return this._worker;\n    }\n\n    worker() {\n        // ...\n        this._requests++;\n\n        // ...\n        if (this._worker) {\n            return this._worker;\n        }\n\n        // ...\n        this._worker = createFetchWorker();\n\n        //\n        return this._worker;\n    }\n})();\n","import lworker from \"./loader.worker.mjs\";\n\n/**\n *\n */\nexport default new (class LoaderFetch {\n    constructor() {\n        // ...\n        this.cache = {};\n    }\n\n    /**\n     * Fetches a resource url in the secondary thread and retrieves it as a blob\n     * @private\n     * @param {String} href The resource url to be fetched\n     * @param {Object} options The fetch options object\n     * @returns {Promise} The fetch promise\n     */\n    async fetch(href, options) {\n        // ...\n        options = {\n            ...{\n                cache: true,\n                fetch: {}\n            },\n            ...options\n        };\n\n        // ...\n        if (options.cache === true && href in this.cache) {\n            return await this.cache[href];\n        }\n\n        // ...\n        return (this.cache[href] = new Promise((resolve, reject) => {\n            //\n            const worker = lworker.worker();\n\n            // ...\n            worker.postMessage({\n                href: href,\n                options: options.fetch\n            });\n\n            // ...\n            // TODO: possibly use messageerror for reject?\n            worker.addEventListener(\"message\", (event) => {\n                const data = event.data;\n\n                // ...\n                if (data.href !== href) {\n                    return;\n                }\n\n                //\n                lworker.terminate();\n\n                // ...\n                if (data.status === 200) {\n                    resolve(data.blob);\n\n                    return;\n                }\n\n                // ...\n                reject(\n                    new Error(`${data.statusText} for ${data.href} resource.`)\n                );\n            });\n        }));\n    }\n})();\n","/**\n *\n */\nexport default new (class LoaderLoad {\n    constructor() {\n        // loaders closure, filled with default loaders\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n        this.loaders = {};\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        this.loaders[type] = loader;\n    }\n\n    /**\n     * Loads a resource, which usually consists in attaching it to an existent DOM element\n     * @private\n     * @param {Blob} blob The resource to be loaded in Blob form\n     * @param {Object} options The resource load options\n     * @returns {Promise} The resource load in promise form\n     */\n    async load(blob, options) {\n        const type = blob.type;\n\n        //...\n        const keys = type.split(\"/\").reduce((x, y) => [type, x, y]);\n\n        // ...\n        for (const key in keys) {\n            const loader = keys[key];\n\n            if (loader in this.loaders) {\n                return await this.loaders[loader](blob, options);\n            }\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid ${blob.type} media type passed to Loader class \"load\" method.`\n        );\n    }\n})();\n","import { getURL } from \"./loader.utils.mjs\";\nimport lfetch from \"./loader.fetch.mjs\";\nimport lload from \"./loader.load.mjs\";\n\nexport default class Loader {\n    constructor() {}\n\n    /**\n     * Fetches one or more resources url\n     * @param {Array.<String>|Array.<URL>|String|URL} resource The resource(s) url to be fetched in a separate thread\n     * @param {Object} options The fetch options object\n     * @returns {Array.<Promise>|Promise} The fetch promise(s)\n     */\n    async fetch(resource, options) {\n        // ...\n        if (Array.isArray(resource)) {\n            return await resource.map((a) => this.fetch(a, options));\n        }\n\n        // ...\n        if (typeof resource === \"string\") {\n            return await this.fetch(getURL(resource), options);\n        }\n\n        // ...\n        if (resource instanceof URL) {\n            return await lfetch.fetch(resource.href, options);\n        }\n\n        // ...\n        throw new TypeError(\n            `Invalid argment of type ${typeof resource} passed to Loader class \"fetch\" method.`\n        );\n    }\n\n    /**\n     * Loads one or more resources url considering the passed options object and the resource mime type to be loaded\n     * @param {Array.<String>|Array.<URL>|Array.<Blob>|String|URL|Blob} resource The resource(s) to be loaded\n     * @param {Object} options The loader type options\n     * @returns {Array.<Promise>|Promise} The load promise(s)\n     */\n    async load(resource, options) {\n        // ...\n        if (Array.isArray(resource)) {\n            const isArrayOpts = Array.isArray(options);\n\n            return await resource.map((a, i) =>\n                this.load(a, isArrayOpts ? options[i] : options)\n            );\n        }\n\n        // ...\n        const blob =\n            resource instanceof Blob\n                ? resource\n                : await this.fetch(resource, options);\n\n        // ...\n        return await lload.load(blob, options);\n    }\n\n    /**\n     *\n     * @param {String} type\n     * @param {Function} loader\n     * @returns {void}\n     */\n    register(type, loader) {\n        return lload.register(type, loader);\n    }\n}\n"],"names":[],"mappings":"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"}